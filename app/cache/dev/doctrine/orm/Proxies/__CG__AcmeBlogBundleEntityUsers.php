<?php

namespace Proxies\__CG__\Acme\BlogBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \Acme\BlogBundle\Entity\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'username', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'name', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'firstName', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'groupId', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'passkeyword', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'active', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'email', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'createdDate', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'lastVisit', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'blocked', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'sendMail', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'goals', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'games', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'position', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'fotoid', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'ersatzbank', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'id', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'article');
        }

        return array('__isInitialized__', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'username', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'name', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'firstName', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'groupId', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'passkeyword', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'active', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'email', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'createdDate', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'lastVisit', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'blocked', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'sendMail', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'goals', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'games', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'position', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'fotoid', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'ersatzbank', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'id', '' . "\0" . 'Acme\\BlogBundle\\Entity\\Users' . "\0" . 'article');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupId($groupId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupId', array($groupId));

        return parent::setGroupId($groupId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupId', array());

        return parent::getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPasskeyword($passkeyword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasskeyword', array($passkeyword));

        return parent::setPasskeyword($passkeyword);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasskeyword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasskeyword', array());

        return parent::getPasskeyword();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedDate($createdDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedDate', array($createdDate));

        return parent::setCreatedDate($createdDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedDate', array());

        return parent::getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastVisit($lastVisit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastVisit', array($lastVisit));

        return parent::setLastVisit($lastVisit);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastVisit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastVisit', array());

        return parent::getLastVisit();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlocked($blocked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlocked', array($blocked));

        return parent::setBlocked($blocked);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlocked', array());

        return parent::getBlocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendMail($sendMail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendMail', array($sendMail));

        return parent::setSendMail($sendMail);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendMail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendMail', array());

        return parent::getSendMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoals($goals)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoals', array($goals));

        return parent::setGoals($goals);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoals', array());

        return parent::getGoals();
    }

    /**
     * {@inheritDoc}
     */
    public function setGames($games)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGames', array($games));

        return parent::setGames($games);
    }

    /**
     * {@inheritDoc}
     */
    public function getGames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGames', array());

        return parent::getGames();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', array($position));

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', array());

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setFotoid($fotoid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFotoid', array($fotoid));

        return parent::setFotoid($fotoid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFotoid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFotoid', array());

        return parent::getFotoid();
    }

    /**
     * {@inheritDoc}
     */
    public function setErsatzbank($ersatzbank)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setErsatzbank', array($ersatzbank));

        return parent::setErsatzbank($ersatzbank);
    }

    /**
     * {@inheritDoc}
     */
    public function getErsatzbank()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getErsatzbank', array());

        return parent::getErsatzbank();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticle(\Acme\BlogBundle\Entity\Articles $article)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticle', array($article));

        return parent::addArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticle(\Acme\BlogBundle\Entity\Articles $article)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticle', array($article));

        return parent::removeArticle($article);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticle', array());

        return parent::getArticle();
    }

}
